#
# /usr/share/doc/rhel-system-roles/network/example-bridge_with_vlan-playbook.yml 
# These tasks creates a few things.
#   brpublic0              linux bridge
#   bridge-public0          bridge
#   bridge-public0-enp2s0f0 ethernet
#
# These CLI commands do something similar. 
#   # create a bridge device
#   nmcli con add ifname brpublic0 type bridge
#   nmcli con up brpublic0
#   # connect ethernet port to bridge
#   nmcli con down enp2s0f0
#   nmcli con add type bridge-slave ifname enp2s0f0 master brpublic0
#   nmcli con up brpublic0
# check
#   ip -brief link show type bridge
#   ip route
#   nmcli con
#   nmcli device status
# delete                      
#   sudo nmcli con delete brpublic0-enp2s0f0
#   sudo nmcli con delete brpublic0

- name: Install RPM package
  dnf:
    name: rhel-system-roles
    state: present

# Assume a simple machine with only one ethernet port.
- name: find the network interface name
  set_fact:
    ethernet_port: "{{ ansible_facts['default_ipv4']['interface'] }}"

- name: display the interface name
  debug:
    var: ethernet_port

# requires gather_facts to set ansible_python
- name: use rhel-system-role network
  vars:
    network_connections:
      #
      # Create a bridge profile
      - name: "{{ public_nmcli_name }}"
        state: up
        type: bridge
        interface_name: "{{ public_bridge_name }}"

        #interface_name defaults to the connection name
        ip:
          dhcp4: yes
          auto6: yes
      #
      # set an ethernet port to the bridge
      - name: "{{ public_nmcli_name }}-{{ ethernet_port }}"
        state: up
        type: ethernet
        interface_name: "{{ ethernet_port }}"
        controller: "{{ public_nmcli_name }}"
        port_type: bridge
  include_role:
    name: rhel-system-roles.network

